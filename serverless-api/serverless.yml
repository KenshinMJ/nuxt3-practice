service: nuxt3-practice-api

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  region: ap-northeast-1
  environment:
    DYNAMODB_TABLE: ${param:dynamodb-table}
    DYNAMODB_REGION: ${self:provider.region}
    DYNAMODB_ENDPOINT: ${param:dynamodb-endpoint}
  logRetentionInDays: 14
  deploymentBucket:
    name: ${self:service}-deployment-bucket
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${param:dynamodb-table}"

params:
  default:
    dynamodb-table: todo
    dynamodb-endpoint: http://localhost:8000
  dev:
    dynamodb-endpoint: dynamodb.${self:provider.region}.amazonaws.com

plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-prune-plugin

custom:
  prune:
    automatic: true
    number: 3
  dynamodb:
    stages:
      - local
    start:
#      port: 8000
      inMemory: true
#      heapInitial: 200m
#      heapMax: 1g
      migrate: true
      seed: true
#      convertEmptyValues: true
    seed:
      development:
        sources:
          - table: todo
            sources: [ ./migrations/todos.json ]

functions:
  create:
    handler: todos/create.create
    events:
      - http:
          path: todos
          method: post
          cors: true

  list:
    handler: todos/list.list
    events:
      - http:
          path: todos
          method: get
          cors: true
        
  get:
    handler: todos/get.get
    events:
      - http:
          path: todos/{id}
          method: get
          cors: true
        
  update:
    handler: todos/update.update
    events:
      - http:
          path: todos/{id}
          method: put
          cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${param:dynamodb-table}
